#!/usr/bin/ruby

# Project Euler Problem 2:
# 
# Each new term in the Fibonacci sequence is generated by adding the previous 
# two terms. By starting with 1 and 2, the first 10 terms will be:
# 
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not 
# exceed four million, find the sum of the even-valued terms.

class Fibonacci
	@a = 1
	@b = 2

	class << self
		include Enumerable

		def each
			1.upto(Float::INFINITY) do |i|
				tmp, @a, @b = @a, @b, @a + @b
				yield tmp
			end
		end
	end
end

puts Fibonacci.take_while{ |i| i < 4000000 }.select{ |j| j % 2 == 0 }.inject(0){ |sum, k| sum + k}
